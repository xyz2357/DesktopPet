.pet {
  position: absolute;
  user-select: none;
  /* 其他样式现在由 getPetContainerStyle() 函数控制 */
}

.pet__avatar {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pet__emoji {
  text-align: center;
  user-select: none;
  /* 动画和变换现在由 getPetAvatarStyle() 函数控制 */
}

.pet__image,
.pet__video {
  width: 100%;
  height: 100%;
  object-fit: contain;
  user-select: none;
  border-radius: 8px;
  /* 动画和变换现在由 getPetAvatarStyle() 函数控制 */
}

.pet__video::-webkit-media-controls {
  display: none !important;
}

.pet__video::-webkit-media-controls-panel {
  display: none !important;
}

.pet__bubble {
  position: absolute;
  /* 使用 CSS 变量，将在组件中动态设置 */
  top: var(--bubble-top-offset, -40px);
  left: 50%;
  transform: translateX(-50%);
  background: var(--bubble-background, rgba(255, 255, 255, 0.9));
  backdrop-filter: blur(10px);
  padding: var(--bubble-padding, 6px 12px);
  border-radius: var(--bubble-border-radius, 16px);
  font-size: var(--bubble-font-size, 12px);
  white-space: nowrap;
  pointer-events: none;
  border: var(--bubble-border, 1px solid rgba(0, 0, 0, 0.1));
  box-shadow: var(--bubble-shadow, 0 4px 12px rgba(0, 0, 0, 0.15));
  /* 显示/隐藏现在由 getBubbleStyle() 函数控制 */
}

.pet__bubble::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border: 6px solid transparent;
  border-top-color: rgba(255, 255, 255, 0.9);
}

/* ========== CSS 动画定义 ========== */
/* 这些 @keyframes 动画仍然在 TypeScript 中使用 */

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes celebrate {
  0% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.2) rotate(-5deg);
  }
  50% {
    transform: scale(1.3) rotate(5deg);
  }
  75% {
    transform: scale(1.2) rotate(-3deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

@keyframes walk {
  0%, 100% {
    transform: translateX(0) rotate(0deg);
  }
  25% {
    transform: translateX(-3px) rotate(-2deg);
  }
  75% {
    transform: translateX(3px) rotate(2deg);
  }
}

@keyframes sleep {
  0%, 100% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(-5px) scale(0.98);
  }
}

@keyframes observe {
  0%, 100% {
    transform: translateX(0);
  }
  20% {
    transform: translateX(5px);
  }
  40% {
    transform: translateX(-3px);
  }
  60% {
    transform: translateX(4px);
  }
  80% {
    transform: translateX(-2px);
  }
}

@keyframes yawn {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.1) translateY(-2px);
  }
  60% {
    transform: scale(1.15) translateY(-4px);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes stretch {
  0% {
    transform: scale(1, 1);
  }
  25% {
    transform: scale(1.1, 0.9) translateY(-3px);
  }
  50% {
    transform: scale(1.15, 0.85) translateY(-6px);
  }
  75% {
    transform: scale(1.05, 1.1) translateY(2px);
  }
  100% {
    transform: scale(1, 1);
  }
}

@keyframes hover-bounce {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05) translateY(-2px);
  }
  100% {
    transform: scale(1.02);
  }
}

@keyframes idle-breathe {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.01);
  }
}

@keyframes dragover-pulse {
  0%, 100% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.05);
    filter: brightness(1.2);
  }
}

@keyframes eating {
  0%, 100% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.1) translateY(-2px);
  }
  50% {
    transform: scale(1.05);
  }
  75% {
    transform: scale(1.08) translateY(-1px);
  }
}

@keyframes drinking {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05) translateY(-3px);
  }
}

@keyframes playing {
  0%, 100% {
    transform: rotate(0deg) scale(1);
  }
  25% {
    transform: rotate(-10deg) scale(1.1);
  }
  50% {
    transform: rotate(15deg) scale(1.15);
  }
  75% {
    transform: rotate(-5deg) scale(1.05);
  }
}

@keyframes playful {
  0%, 100% {
    transform: translateX(0) scale(1);
  }
  50% {
    transform: translateX(5px) scale(1.02);
  }
}

@keyframes hunting {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(0.9) translateY(-5px);
  }
  60% {
    transform: scale(1.2) translateY(-2px);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes relaxed {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02) translateY(-1px);
  }
}

@keyframes examining {
  0%, 100% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.05) rotate(-3deg);
  }
  75% {
    transform: scale(1.05) rotate(3deg);
  }
}

@keyframes admiring {
  0%, 100% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.05);
    filter: brightness(1.2);
  }
}

@keyframes royal {
  0%, 100% {
    transform: scale(1) translateY(0);
    filter: brightness(1) hue-rotate(0deg);
  }
  50% {
    transform: scale(1.1) translateY(-5px);
    filter: brightness(1.2) hue-rotate(30deg);
  }
}

@keyframes magical {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    filter: brightness(1) hue-rotate(0deg);
  }
  25% {
    transform: scale(1.05) rotate(-2deg);
    filter: brightness(1.2) hue-rotate(90deg);
  }
  50% {
    transform: scale(1.1) rotate(0deg);
    filter: brightness(1.3) hue-rotate(180deg);
  }
  75% {
    transform: scale(1.05) rotate(2deg);
    filter: brightness(1.2) hue-rotate(270deg);
  }
}

@keyframes euphoric {
  0%, 100% {
    transform: scale(1) rotate(0deg) translateY(0);
    filter: brightness(1) contrast(1) saturate(1);
  }
  25% {
    transform: scale(1.15) rotate(-5deg) translateY(-8px);
    filter: brightness(1.3) contrast(1.2) saturate(1.5);
  }
  50% {
    transform: scale(1.2) rotate(0deg) translateY(-12px);
    filter: brightness(1.4) contrast(1.3) saturate(2);
  }
  75% {
    transform: scale(1.15) rotate(5deg) translateY(-8px);
    filter: brightness(1.3) contrast(1.2) saturate(1.5);
  }
}